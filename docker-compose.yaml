x-airflow-common: &airflow-common
  image: apache/airflow:2.8.3
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
    AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
    # Run this command :-> python3 -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
    AIRFLOW__CORE__FERNET_KEY: fw6hMNwXxirogeFMEEFEPU4ZF8O3a1Yr2rbb5syJH68=
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "True"
    AIRFLOW__CORE__LOAD_EXAMPLES: "True"
    _AIRFLOW_WWW_USER_USERNAME: airflow
    _AIRFLOW_WWW_USER_PASSWORD: airflow
    _AIRFLOW_WWW_USER_FIRSTNAME: Admin
    _AIRFLOW_WWW_USER_LASTNAME: User
    _AIRFLOW_WWW_USER_EMAIL: admin@example.com
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  redis:
    image: redis:latest
    ports:
      - "6380:6379" # Map host 6380 -> container 6379

  airflow-init:
    <<: *airflow-common
    entrypoint: >
      bash -c "
      airflow db migrate &&
      sleep 10 &&
      airflow users create --username $${_AIRFLOW_WWW_USER_USERNAME} --firstname $${_AIRFLOW_WWW_USER_FIRSTNAME} --lastname $${_AIRFLOW_WWW_USER_LASTNAME} --role Admin --email $${_AIRFLOW_WWW_USER_EMAIL} --password $${_AIRFLOW_WWW_USER_PASSWORD}
      "
    environment:
      <<: *airflow-common-env
    depends_on:
      - postgres
      - redis

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "9080:8080"
    depends_on:
      - airflow-init

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    depends_on:
      - airflow-init

  airflow-worker:
    <<: *airflow-common
    command: celery worker
    depends_on:
      - airflow-webserver

volumes:
  postgres-db-volume:
